#!/usr/bin/env python3

import os
import sys
import argparse
from pathlib import Path
import glob
from shutil import copyfile
from itertools import groupby

from Bio import SeqIO

parser = argparse.ArgumentParser(prog='compute_stats_consensus', 
description='Generate statistics on a consensus)', 
formatter_class=lambda prog: argparse.HelpFormatter(prog,max_help_position=30,width=200))
parser.add_argument('-f', action='store', dest='consensus', type=str, required=True, help='Path to consensus')

inputArgs = parser.parse_args()

fasta_sequences = SeqIO.parse(open(inputArgs.consensus),'fasta')
# with open(output_file) as out_file:
for fasta in fasta_sequences:
    name, sequence = fasta.id, str(fasta.seq)
    tot = len(sequence)
    nbN = (sequence.count('N'))
    called = 100 - (nbN/tot)*100
    print(name)
    print('Total length of the consensus: '+str(tot))
    print('Recovery: %.2f' % called)
    print('Number of Ns: '+str(nbN))
    print('-------------------------------------------')

